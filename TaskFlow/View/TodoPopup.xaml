<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:model="clr-namespace:TaskFlow.Model"
             xmlns:popup="clr-namespace:Syncfusion.Maui.Popup;assembly=Syncfusion.Maui.Popup"
             xmlns:viewmodel="clr-namespace:TaskFlow.ViewModel"
             xmlns:view="clr-namespace:TaskFlow.View"
             xmlns:converters="clr-namespace:TaskFlow.Converters"
             x:Class="TaskFlow.View.TodoPopup"
             x:Name="this" >
    <!--
        The todo popup requires a hidden and a non hidden version of each other in order to 
        implement an editable, and non-editable view.
    -->
    
    <!-- Resources Begin -->
    <ContentView.Resources>
        <Style x:Key="bg" TargetType="Border">
            <Setter Property="Stroke" Value="#341C4F"></Setter>
            <Setter Property="BackgroundColor" Value="#341C4F"></Setter>
            <Setter Property="Margin" Value="20"></Setter>
            <Setter Property="Padding" Value="10"></Setter>
            <Setter Property="StrokeShape">
                <Setter.Value>
                    <RoundRectangle CornerRadius="10"></RoundRectangle>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="entryFrame" TargetType="Border">
            <Setter Property="Stroke" Value="#583F75"></Setter>
            <Setter Property="BackgroundColor" Value="#583F75"></Setter>
            <Setter Property="Margin" Value="0,0,0,15"></Setter>
            <Setter Property="StrokeShape">
                <Setter.Value>
                    <RoundRectangle CornerRadius="10"></RoundRectangle>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="labelBorder" TargetType="Border">
            <Setter Property="Stroke" Value="#341C4F"></Setter>
            <Setter Property="StrokeThickness" Value="2"></Setter>
            <Setter Property="BackgroundColor" Value="#583F75"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="StrokeShape">
                <Setter.Value>
                    <RoundRectangle CornerRadius="10"></RoundRectangle>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Grid">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
                                    Value="LightSkyBlue" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style TargetType="Entry">
            <Setter Property="PlaceholderColor" Value="LightGrey"></Setter>
        </Style>

        <Style TargetType="ImageButton" x:Key="ImageButton">
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="WidthRequest" Value="25"></Setter>
            <Setter Property="BackgroundColor" Value="#00000000"></Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Margin" Value="0,5,10,5"></Setter>
            <Setter Property="TextColor" Value="White"></Setter>
        </Style>
        
    </ContentView.Resources>
    
    <!-- Content Begin -->
    <ContentView.Content>
        <StackLayout HeightRequest="0">
            
            <!-- Editable Popup -->
            <popup:SfPopup x:Name="todoPopup" IsOpen="False" BindingContext="{x:Reference this}"
                       HeaderTitle="Edit Task" ShowFooter="True" ShowHeader="False" FooterHeight="50"
                       AutoSizeMode="Height" Closing="CancelButton_Clicked">
                <popup:SfPopup.PopupStyle>
                    <popup:PopupStyle CornerRadius="20" HeaderBackground="{StaticResource Tertiary}"
                                  MessageBackground="{StaticResource Secondary}" OverlayColor="#BF1F0739"
                                  HeaderTextColor="White" FooterBackground="{StaticResource Tertiary}"/>
                </popup:SfPopup.PopupStyle>
                <popup:SfPopup.ContentTemplate>
                    <DataTemplate>
                        <ScrollView>
                            <Border Style="{StaticResource bg}">
                                <StackLayout Margin="10">
                                    <Label Text="Title"/>
                                    <Border Style="{StaticResource entryFrame}">
                                        <Entry x:Name="entry1" Placeholder="Task Title" Text="{Binding TempTodo.Title}" />
                                    </Border>

                                    <Label Text="Description"/>
                                    <Border Style="{StaticResource entryFrame}">
                                        <Entry Placeholder="No Description" Text="{Binding TempTodo.Description}" />
                                    </Border>

                                    <!-- Importance Selection -->
                                    <Label Text="Importance"/>
                                    <FlexLayout AlignItems="Start" Wrap="Wrap" JustifyContent="SpaceEvenly" Direction="Row">
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding LowEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding LowEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="low_priority.png" Pressed="Low_Pressed"/>
                                        </Border>

                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding MedEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding MedEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="medium_priority.png" Pressed="Med_Pressed"/>
                                        </Border>

                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding HighEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding HighEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="high_priority.png" Pressed="High_Pressed"/>
                                        </Border>

                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding VHighEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding VHighEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="very_high_priority.png" Pressed="Urgent_Pressed"/>
                                        </Border>
                                        
                                    </FlexLayout>

                                    <FlexLayout Wrap="Wrap" JustifyContent="Start" Direction="Column">
                                        <Label FlexLayout.AlignSelf="Start" Text="Time Box Length"/>
                                        <Picker ItemsSource="{Binding TimeBlockList}" SelectedItem="{Binding TempTodo.TimeBlock}" 
                                            FlexLayout.AlignSelf="End" />
                                    </FlexLayout>

                                    <Label Text="Due Date"/>
                                    <FlexLayout Margin="0,20,0,10" Wrap="Wrap" JustifyContent="Start" Direction="Row">
                                        <DatePicker Format="dd-MMM-yyyy" x:Name="TodoDatePicker" 
                                                Date="{Binding TempTodo.DueDate}" 
                                                Margin="0,0,10,10" />
                                        <TimePicker x:Name="TodoTimePicker" Time="{Binding TempSelectedTime}" />
                                    </FlexLayout>

                                    <Grid ColumnDefinitions="Auto,Auto">

                                        <StackLayout Grid.Column="0" FlexLayout.AlignSelf="Start">
                                            <Label Text="Label"/>
                                            <Border Style="{StaticResource labelBorder}">
                                                <CollectionView ItemsSource="{Binding TempTodo.Labels}" SelectionMode="Multiple" 
                                                            SelectedItems="{Binding TempTodo.Labels}" HeightRequest="100">
                                                    <CollectionView.ItemsLayout>
                                                        <GridItemsLayout Orientation="Vertical" Span="2" />
                                                    </CollectionView.ItemsLayout>
                                                </CollectionView>
                                            </Border>
                                            <ScrollView>
                                            </ScrollView>
                                        </StackLayout>

                                        <StackLayout Grid.Column="1" Margin="20,0,0,0">
                                            <Label Text="Colour"></Label>
                                            <Grid ColumnDefinitions="*,50">
                                                <Picker Grid.Column="0" Title="{Binding TempColourLabel}" SelectedItem="{Binding TempColourLabel}" ItemsSource="{Binding ColoursList}"></Picker>
                                                <Ellipse Grid.Column="1" Fill="{Binding TempTodo.Color, Converter={converters:HexStringToColorConverter}}" WidthRequest="20" HeightRequest="20"></Ellipse>
                                            </Grid>

                                        </StackLayout>
                                    </Grid>
                                </StackLayout>
                            </Border>
                        </ScrollView>
                    </DataTemplate>
                </popup:SfPopup.ContentTemplate>
                
                <!-- Footer -->
                <popup:SfPopup.FooterTemplate>
                    <DataTemplate>
                        <Grid ColumnDefinitions="Auto,120, 120" FlowDirection="RightToLeft">
                            <Button Grid.Column="2" x:Name="CancelButton" Text="Cancel" Clicked="CancelButton_Clicked" Margin="5,5,10,5"/>
                            <Button Grid.Column="1" x:Name="SaveButton" Text="Save" Clicked="SaveButton_Clicked" Margin="5,5,10,5"/>
                        </Grid>
                    </DataTemplate>
                </popup:SfPopup.FooterTemplate>
            </popup:SfPopup>
            <!-- End of Editable Popup-->

            <!-- Non-Editable Popup -->
            <popup:SfPopup x:Name="todoPopupHidden" IsOpen="{Binding IsOpen}" BindingContext="{x:Reference this}" 
                       HeaderTitle="Edit Task" ShowFooter="True" ShowHeader="False" FooterHeight="50"
                       AutoSizeMode="Height">
                <popup:SfPopup.PopupStyle>
                    <popup:PopupStyle CornerRadius="20" HeaderBackground="{StaticResource Tertiary}"
                                  MessageBackground="{StaticResource Secondary}" OverlayColor="#BF1F0739"
                                  HeaderTextColor="White" FooterBackground="{StaticResource Tertiary}"/>
                </popup:SfPopup.PopupStyle>
                <popup:SfPopup.ContentTemplate>
                    <DataTemplate>
                        <ScrollView>
                            <Border Style="{StaticResource bg}">
                                <StackLayout Margin="10">
                                    <Label Text="Title"/>
                                    <Border Style="{StaticResource entryFrame}">
                                        <Entry Placeholder="Task Title" Text="{Binding Todo.Title}" 
                                           IsEnabled="False"/>
                                    </Border>

                                    <Label Text="Description"/>
                                    <Border Style="{StaticResource entryFrame}">
                                        <Entry Placeholder="No Description" Text="{Binding Todo.Description}" 
                                           IsEnabled="False"/>
                                    </Border>

                                    <!-- Importance Selection -->
                                    <Label Text="Importance"/>
                                    <FlexLayout AlignItems="Start" Wrap="Wrap" JustifyContent="SpaceEvenly" Direction="Row">
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding LowEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding LowEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="low_priority.png"/>
                                        </Border>

                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding MedEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding MedEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="medium_priority.png"/>
                                        </Border>

                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding HighEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding HighEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="high_priority.png"/>
                                        </Border>

                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BackgroundColor" Value="#00000000"></Setter>
                                                    <Setter Property="StrokeThickness" Value="2"></Setter>
                                                    <Setter Property="StrokeShape">
                                                        <Setter.Value>
                                                            <RoundRectangle CornerRadius="20"></RoundRectangle>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger TargetType="Border" Binding="{Binding VHighEnable}" Value="False">
                                                            <Setter Property="Stroke" Value="#341C4F"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger TargetType="Border" Binding="{Binding VHighEnable}" Value="True">
                                                            <Setter Property="Stroke" Value="#7EC8BA"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <ImageButton Style="{StaticResource ImageButton}" Source="very_high_priority.png"/>
                                        </Border>

                                    </FlexLayout>

                                    <FlexLayout Wrap="Wrap" JustifyContent="Start" Direction="Column">
                                        <Label FlexLayout.AlignSelf="Start" Text="Time Box Length"/>
                                        <Picker ItemsSource="{Binding TimeBlockList}" SelectedItem="{Binding Todo.TimeBlock}" 
                                            FlexLayout.AlignSelf="End" 
                                            IsEnabled="False"/>
                                    </FlexLayout>

                                    <Label Text="Due Date"></Label>
                                    <FlexLayout Margin="0,20,0,10" Wrap="Wrap" JustifyContent="Start" Direction="Row">
                                        <DatePicker Format="dd-MMM-yyyy"
                                                Date="{Binding Todo.DueDate.Date}"
                                                Margin="0,0,10,10"
                                                IsEnabled="False"/>
                                        <TimePicker Time="{Binding Todo.DueDate.TimeOfDay}" 
                                                IsEnabled="False"/>
                                    </FlexLayout>

                                    <Grid ColumnDefinitions="Auto,Auto">

                                        <StackLayout Grid.Column="0" FlexLayout.AlignSelf="Start">
                                            <Label Text="Label"/>
                                            <Border Style="{StaticResource labelBorder}">
                                                <CollectionView ItemsSource="{Binding Todo.Labels}" SelectionMode="Multiple" 
                                                            SelectedItems="{Binding Todo.Labels}" HeightRequest="100"
                                                            IsEnabled="False">
                                                    <CollectionView.ItemsLayout>
                                                        <GridItemsLayout Orientation="Vertical" Span="2" />
                                                    </CollectionView.ItemsLayout>
                                                </CollectionView>
                                            </Border>
                                            <ScrollView>
                                            </ScrollView>
                                        </StackLayout>

                                        <StackLayout Grid.Column="1" Margin="20,0,0,0">
                                            <Label Text="Colour"></Label>
                                            <Grid ColumnDefinitions="*,50">
                                                <Picker Grid.Column="0" Title="{Binding ColourLabel}" SelectedItem="{Binding ColourLabel}" 
                                                        ItemsSource="{Binding ColoursList}" IsEnabled="False"></Picker>
                                                <Ellipse Grid.Column="1" Fill="{Binding Todo.Color, Converter={converters:HexStringToColorConverter}}" 
                                                         WidthRequest="20" HeightRequest="20"></Ellipse>
                                            </Grid>
                                        </StackLayout>

                                    </Grid>
                                </StackLayout>
                            </Border>
                        </ScrollView>
                    </DataTemplate>
                </popup:SfPopup.ContentTemplate>
                <!-- Footer -->
                <popup:SfPopup.FooterTemplate>
                    <DataTemplate>
                        <Grid ColumnDefinitions="Auto, 40" FlowDirection="RightToLeft">
                            <Button Text="Edit" Clicked="EditButton_Clicked" Margin="5,5,20,5"/>
                        </Grid>
                    </DataTemplate>
                </popup:SfPopup.FooterTemplate>
            </popup:SfPopup>
            <!-- End of Non-Editable Popup-->
            
        </StackLayout>
    </ContentView.Content>
</ContentView>
