<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:converters="clr-namespace:TaskFlow.Converters"
             xmlns:sfList="clr-namespace:Syncfusion.Maui.ListView;assembly=Syncfusion.Maui.ListView"
             xmlns:viewmodel="clr-namespace:TaskFlow.ViewModel"
             xmlns:model="clr-namespace:TaskFlow.Model"
             xmlns:view="clr-namespace:TaskFlow.View"
             x:DataType="viewmodel:ToDoViewModel"
             x:Class="TaskFlow.View.ToDoPage"
             Title="To-Do List">

    <ContentPage.Resources>
        <Style x:Key="CheckboxStyle" TargetType="CheckBox">
            <Setter Property="MinimumHeightRequest" Value="44"/>
            <Setter Property="MinimumWidthRequest" Value="44"/>
            <Setter Property="Scale" Value="1.7"/>
            <Setter Property="HorizontalOptions" Value="Start"/>
            <Setter Property="VerticalOptions" Value="Start"/>
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" >
                            <VisualState.Setters>
                                <Setter Property="Color"
                                        Value="{Binding Source={RelativeSource AncestorType={x:Type model:TodoItem}}, Path=Color, Converter={converters:HexStringToColorConverter}}"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="IsChecked">
                            <VisualState.Setters>
                                <Setter Property="Color"
                                        Value="{Binding Source={RelativeSource AncestorType={x:Type model:TodoItem}}, Path=Color, Converter={converters:HexStringToColorConverter}}"/>
                                <Setter Property="Opacity"
                                        Value="0.6"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="SortBarFrame" TargetType="Border">
            <Setter Property="BackgroundColor" Value="#583F75"/>
            <Setter Property="Stroke" Value="#583F75"/>
            <Setter Property="StrokeShape">
                <Setter.Value>
                    <RoundRectangle CornerRadius="20"></RoundRectangle>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="30,15,30,0"/>
            <Setter Property="Padding" Value="20,1,20,1"/>
            <Setter Property="HeightRequest" Value="50"/>
        </Style>

        <Style x:Key="ListItemBorder" TargetType="Border">
            <Setter Property="BackgroundColor" Value="#341C4F" />
            <Setter Property="Stroke" Value="#583F75" />
            <Setter Property="StrokeShape" Value="RoundRectangle 20,20,20,20" />
            <Setter Property="Padding" Value="15,12,8,12" />
        </Style>

        <Style x:Key="TodoTitleLabel" TargetType="Label">
            <Setter Property="Margin" Value="7,0,5,0" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="TextColor" Value="{StaticResource White}" />
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="LineBreakMode" Value="TailTruncation" />
            <Setter Property="MaxLines" Value="-1" />
        </Style>

        <Style x:Key="DueDateBorder" TargetType="Border">
            <Setter Property="BackgroundColor" Value="#583F75" />
            <Setter Property="Stroke" Value="#341C4F" />
            <Setter Property="StrokeShape" Value="RoundRectangle 20,20,20,20" />
            <Setter Property="Padding" Value="5,0,5,0" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--#region Filter/Sort Bar-->
        <Frame Grid.Row="0" Style="{StaticResource SortBarFrame}">
            <Grid VerticalOptions="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0"
                       CharacterSpacing="1"
                       FontAttributes="Bold"
                       Text="Sort by:"
                       TextColor="White"
                       VerticalOptions="Center" />

                <ImageButton Grid.Column="1"
                             Command="{Binding GoToNewTaskPageCommand}"
                             HorizontalOptions="End"
                             Source="filter.svg" />
            </Grid>
        </Frame>
        <!--#endregion-->

        <sfList:SfListView x:Name="TodoList"
                           Grid.Row="1"
                           Margin="20,10,20,10"
                           ItemSpacing="8"
                           ItemsSource="{Binding TodoItems}"
                           SelectionMode="SingleDeselect"
                           AllowSwiping="True"
                           SwipeThreshold="50"
                           SwipeOffset="100"
                           AutoFitMode="DynamicHeight"
                           SelectedItem="{Binding SelectedTodo}"
                           ItemSize="115"
                           SwipeStarting="TodoList_SwipeStarting" 
                           SwipeEnded="TodoList_SwipeEnded">

            <sfList:SfListView.EndSwipeTemplate>
                <DataTemplate>
                    <Border Style="{StaticResource ListItemFrame}" Stroke="Red" BackgroundColor="#3C753F66" Margin="15,0,0,0">
                        <ImageButton x:Name="DeleteImage" Source="flame_light.svg" WidthRequest="40"
                               Clicked="DeleteImage_Clicked"/>
                    </Border>
                </DataTemplate>
            </sfList:SfListView.EndSwipeTemplate>
            <sfList:SfListView.StartSwipeTemplate>
                <DataTemplate>
                    <Border Style="{StaticResource ListItemFrame}" Stroke="{StaticResource Accent}" BackgroundColor="#3C7EC8BA" Margin="0,0,15,0">
                        <ImageButton x:Name="ArchiveImage" Source="arhive_alt_export_light.svg" WidthRequest="40"
                                Clicked="ArchiveImage_Clicked"/>
                    </Border>
                </DataTemplate>
            </sfList:SfListView.StartSwipeTemplate>

            <!--TodoItem Data Template-->
            <sfList:SfListView.ItemTemplate>
                <DataTemplate x:DataType="{x:Type model:TodoItem}">
                    <Border Style="{StaticResource ListItemBorder}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--#region Checkbox-->
                            <CheckBox x:Name="CheckBox"
                                      Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="0"
                                      CheckedChanged="CheckBox_CheckedChanged"
                                      IsChecked="{Binding Completed}"
                                      Style="{StaticResource CheckboxStyle}" />
                            <!--#endregion-->

                            <!--#region Title-->
                            <Label Grid.Row="0"
                                   Grid.RowSpan="2"
                                   Grid.Column="1"
                                   Style="{StaticResource TodoTitleLabel}"
                                   Text="{Binding Title}" />
                            <!--#endregion-->

                            <!--#region TodoItem Menu button.-->
                            <ImageButton x:Name="TodoItemMenuButton"
                                         Grid.Row="0"
                                         Grid.Column="2"
                                         Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:ToDoViewModel}}, Path=GoToNewTaskPageCommand}"
                                         HeightRequest="16"
                                         HorizontalOptions="End"
                                         VerticalOptions="Center"
                                         Source="menu_closed.svg"
                                         HeightRequest="15"
                                         Clicked="TodoItemMenuButton_Clicked"
                                         Command="{Binding Path=BindingContext.SetSelectedItemCommand, Source={x:Reference TodoList}}"
                                         CommandParameter="{Binding .}">
                            </ImageButton>

                            <!--Due Date-->
                            <Border Grid.Row="1"
                                   Grid.Column="1"
                                   Style="{StaticResource DueDateFrame}">
                                <Label TextColor="White"
                                       VerticalOptions="Center"
                                       FontSize="10"
                                       Margin="0"
                                       Padding="0">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="DUE: " />
                                            <Span Text="{Binding DueDate, Converter={converters:DateTimeToStringConverter}}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                            </Border>

                            <!--Labels-->
                            <CollectionView Grid.Row="2"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            ItemsSource="{Binding Labels, Converter={converters:LabelItemsToStringListConverter}}"
                                            ItemsLayout="HorizontalList">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <Border Style="{StaticResource LabelFrame}">
                                            <Label Text="{Binding}" TextColor="White" FontSize="13"/>
                                        </Border>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>

                            <HorizontalStackLayout Grid.Row="2"
                                                   Grid.Column="1"
                                                   Grid.ColumnSpan="2"
                                                   Margin="0,0,5,0"
                                                   HorizontalOptions="End">

                                <!--Time Block: Image and TimeSpan-->
                                <VerticalStackLayout Grid.Column="0" VerticalOptions="End" MaximumWidthRequest="37.45" Margin="5,0,0,0">
                                    <VerticalStackLayout.Triggers>
                                        <DataTrigger TargetType="VerticalStackLayout"
                                                     Binding="{Binding TimeBlock}"
                                                     Value="0">
                                            <Setter Property="IsVisible" Value="False"/>
                                        </DataTrigger>
                                    </VerticalStackLayout.Triggers>
                                    <Image x:Name="TimeblockImage"
                                           Source="timer.svg"
                                           HeightRequest="20">
                                    </Image>
                                    <Label Text="{Binding TimeBlock,Converter={converters:TimeBlockToStringConverter}}"
                                           TextColor="White"
                                           FontSize="8"
                                           HorizontalOptions="Center"
                                           VerticalOptions="CenterAndExpand"
                                           LineBreakMode="WordWrap"
                                           HorizontalTextAlignment="Center"
                                           MaxLines="2"/>
                                </VerticalStackLayout>

                                <!--Priority: Image and Label-->
                                <VerticalStackLayout Grid.Column="1" VerticalOptions="End" MinimumWidthRequest="37.45" Margin="5,0,0,0">
                                    <VerticalStackLayout.Triggers>
                                        <DataTrigger TargetType="VerticalStackLayout"
                                                     Binding="{Binding Importance}"
                                                     Value="0">
                                            <Setter Property="IsVisible" Value="False"/>
                                        </DataTrigger>
                                    </VerticalStackLayout.Triggers>

                                    <Image x:Name="PriorityImage"
                                           HeightRequest="25">
                                        <Image.Triggers>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding Importance}"
                                                         Value="1">
                                                <Setter Property="Source" Value="low_priority.svg"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding Importance}"
                                                         Value="2">
                                                <Setter Property="Source" Value="medium_priority.svg"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding Importance}"
                                                         Value="3">
                                                <Setter Property="Source" Value="high_priority.svg"/>
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image"
                                                         Binding="{Binding Importance}"
                                                         Value="4">
                                                <Setter Property="Source" Value="very_high_priority.svg"/>
                                            </DataTrigger>
                                        </Image.Triggers>
                                    </Image>
                                    <Label Text="PRIORITY"
                                           TextColor="White"
                                           FontSize="8"
                                           HorizontalOptions="Center"/>
                                </VerticalStackLayout>
                            </HorizontalStackLayout>
                        </Grid>
                    </Border>
                </DataTemplate>
            </sfList:SfListView.ItemTemplate>
        </sfList:SfListView>

        <!--Popup of Task on click-->
        <view:TodoPopup x:Name="popup" Todo="{Binding SelectedTodo}" RunWhenSave="{Binding RefreshTodoCommand}"/>

        <!--Button to go to NewTodoPage-->
        <ImageButton x:Name="CreateNewTodoItemButton" 
                     Grid.Row="1"
                     HorizontalOptions="End" 
                     VerticalOptions="End" 
                     Margin="20"
                     Command="{Binding GoToNewTaskPageCommand}"
                     HeightRequest="80"
                     HorizontalOptions="End"
                     Opacity="0.7"
                     Source="plus_circle.png"
                     VerticalOptions="End"
                     WidthRequest="80" />
    </Grid>
    
</ContentPage>